<launch>

  <arg name="name"                default="lara"/>
  <arg name="model"               default="lara.xacro"/>
  <arg name="enable_rviz"         default="false"/>
  <arg name="enable_gazebo"       default="true"/>
  <arg name="enable_teleop"       default="false"/>
  <arg name="enable_jspublisher"  default="false"/>

  <arg name="init_pos_x" 	default="0.0"/>
  <arg name="init_pos_y" 	default="0.0"/>
  <arg name="init_pos_z" 	default="0.1"/>
  <arg name="init_yaw"   	default="0.0"/>

  <!-- robot_description --> 
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder $(find lara_model)/urdf/$(arg model)" />

  <!-- rviz -->
  <group if="$(arg enable_rviz)" >
    <node name="rviz" pkg="rviz" type="rviz"/>
  </group>

  <!-- gazebo -->
  <!-- <group if="$(arg enable_gazebo)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch"/>
  </group> -->
  <group if="$(arg enable_gazebo)">
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find lara_model)/../worlds/cbr2018.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  </group>



  <!-- keyboard teleop -->
  <group if="$(arg enable_teleop)">
    <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py"
      output="screen" />
  </group>

  <!-- publishers -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <group if="$(arg enable_jspublisher)" >
    <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />
  </group>
  <group unless="$(arg enable_jspublisher)" >
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <!-- spawn simulated robot -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
	args="-param robot_description
	      -urdf
	      -x $(arg init_pos_x)
	      -y $(arg init_pos_y)
	      -z $(arg init_pos_z)
	      -Y $(arg init_yaw)
	      -model $(arg name)">
  </node>

</launch>
